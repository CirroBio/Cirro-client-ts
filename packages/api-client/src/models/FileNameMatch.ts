/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileNameMatch
 */
export interface FileNameMatch {
    /**
     * 
     * @type {string}
     * @memberof FileNameMatch
     */
    fileName: string;
    /**
     * 
     * @type {string}
     * @memberof FileNameMatch
     */
    sampleName: string;
    /**
     * 
     * @type {string}
     * @memberof FileNameMatch
     */
    regexPatternMatch: string;
}

/**
 * Check if a given object implements the FileNameMatch interface.
 */
export function instanceOfFileNameMatch(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fileName" in value;
    isInstance = isInstance && "sampleName" in value;
    isInstance = isInstance && "regexPatternMatch" in value;

    return isInstance;
}

export function FileNameMatchFromJSON(json: any): FileNameMatch {
    return FileNameMatchFromJSONTyped(json, false);
}

export function FileNameMatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileNameMatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileName': json['fileName'],
        'sampleName': json['sampleName'],
        'regexPatternMatch': json['regexPatternMatch'],
    };
}

export function FileNameMatchToJSON(value?: FileNameMatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fileName': value.fileName,
        'sampleName': value.sampleName,
        'regexPatternMatch': value.regexPatternMatch,
    };
}

