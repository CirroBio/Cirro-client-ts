/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserRequest
 */
export interface UpdateUserRequest {
    /**
     * Display name of the user
     * @type {string}
     * @memberof UpdateUserRequest
     */
    name: string;
    /**
     * Email address of the user
     * @type {string}
     * @memberof UpdateUserRequest
     */
    email: string;
    /**
     * Phone number of the user
     * @type {string}
     * @memberof UpdateUserRequest
     */
    phone?: string;
    /**
     * Department or lab the user belongs to
     * @type {string}
     * @memberof UpdateUserRequest
     */
    department?: string;
    /**
     * The organization the user belongs to, only editable by administrators
     * @type {string}
     * @memberof UpdateUserRequest
     */
    organization?: string;
    /**
     * Additional settings for the user
     * @type {{ [key: string]: any; }}
     * @memberof UpdateUserRequest
     */
    settings?: { [key: string]: any; };
    /**
     * Groups the user belongs to, only editable by administrators
     * @type {Array<string>}
     * @memberof UpdateUserRequest
     */
    groups?: Array<string>;
}

/**
 * Check if a given object implements the UpdateUserRequest interface.
 */
export function instanceOfUpdateUserRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function UpdateUserRequestFromJSON(json: any): UpdateUserRequest {
    return UpdateUserRequestFromJSONTyped(json, false);
}

export function UpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'department': !exists(json, 'department') ? undefined : json['department'],
        'organization': !exists(json, 'organization') ? undefined : json['organization'],
        'settings': !exists(json, 'settings') ? undefined : json['settings'],
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
    };
}

export function UpdateUserRequestToJSON(value?: UpdateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'phone': value.phone,
        'department': value.department,
        'organization': value.organization,
        'settings': value.settings,
        'groups': value.groups,
    };
}

