/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentRegistration } from './AgentRegistration';
import {
    AgentRegistrationFromJSON,
    AgentRegistrationFromJSONTyped,
    AgentRegistrationToJSON,
} from './AgentRegistration';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
} from './AgentStatus';

/**
 * 
 * @export
 * @interface AgentDetail
 */
export interface AgentDetail {
    /**
     * 
     * @type {string}
     * @memberof AgentDetail
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AgentDetail
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AgentDetail
     */
    agentRoleArn: string;
    /**
     * 
     * @type {AgentStatus}
     * @memberof AgentDetail
     */
    status: AgentStatus;
    /**
     * 
     * @type {AgentRegistration}
     * @memberof AgentDetail
     */
    registration?: AgentRegistration | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AgentDetail
     */
    tags?: { [key: string]: string; } | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AgentDetail
     */
    environmentConfiguration?: { [key: string]: string; } | null;
    /**
     * 
     * @type {string}
     * @memberof AgentDetail
     */
    createdBy: string;
    /**
     * 
     * @type {Date}
     * @memberof AgentDetail
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AgentDetail
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the AgentDetail interface.
 */
export function instanceOfAgentDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "agentRoleArn" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function AgentDetailFromJSON(json: any): AgentDetail {
    return AgentDetailFromJSONTyped(json, false);
}

export function AgentDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'agentRoleArn': json['agentRoleArn'],
        'status': AgentStatusFromJSON(json['status']),
        'registration': !exists(json, 'registration') ? undefined : AgentRegistrationFromJSON(json['registration']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'environmentConfiguration': !exists(json, 'environmentConfiguration') ? undefined : json['environmentConfiguration'],
        'createdBy': json['createdBy'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function AgentDetailToJSON(value?: AgentDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'agentRoleArn': value.agentRoleArn,
        'status': AgentStatusToJSON(value.status),
        'registration': AgentRegistrationToJSON(value.registration),
        'tags': value.tags,
        'environmentConfiguration': value.environmentConfiguration,
        'createdBy': value.createdBy,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

