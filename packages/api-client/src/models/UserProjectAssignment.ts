/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectRole } from './ProjectRole';
import {
    ProjectRoleFromJSON,
    ProjectRoleFromJSONTyped,
    ProjectRoleToJSON,
} from './ProjectRole';

/**
 * 
 * @export
 * @interface UserProjectAssignment
 */
export interface UserProjectAssignment {
    /**
     * 
     * @type {string}
     * @memberof UserProjectAssignment
     */
    projectId: string;
    /**
     * 
     * @type {ProjectRole}
     * @memberof UserProjectAssignment
     */
    role: ProjectRole;
    /**
     * 
     * @type {string}
     * @memberof UserProjectAssignment
     */
    createdBy: string;
    /**
     * 
     * @type {Date}
     * @memberof UserProjectAssignment
     */
    createdAt?: Date | null;
}

/**
 * Check if a given object implements the UserProjectAssignment interface.
 */
export function instanceOfUserProjectAssignment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "createdBy" in value;

    return isInstance;
}

export function UserProjectAssignmentFromJSON(json: any): UserProjectAssignment {
    return UserProjectAssignmentFromJSONTyped(json, false);
}

export function UserProjectAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProjectAssignment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'role': ProjectRoleFromJSON(json['role']),
        'createdBy': json['createdBy'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
    };
}

export function UserProjectAssignmentToJSON(value?: UserProjectAssignment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'role': ProjectRoleToJSON(value.role),
        'createdBy': value.createdBy,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
    };
}

