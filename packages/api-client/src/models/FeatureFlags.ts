/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureFlags
 */
export interface FeatureFlags {
    /**
     * 
     * @type {boolean}
     * @memberof FeatureFlags
     */
    sftpEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FeatureFlags
     */
    governanceEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FeatureFlags
     */
    projectRequestsEnabled: boolean;
}

/**
 * Check if a given object implements the FeatureFlags interface.
 */
export function instanceOfFeatureFlags(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sftpEnabled" in value;
    isInstance = isInstance && "governanceEnabled" in value;
    isInstance = isInstance && "projectRequestsEnabled" in value;

    return isInstance;
}

export function FeatureFlagsFromJSON(json: any): FeatureFlags {
    return FeatureFlagsFromJSONTyped(json, false);
}

export function FeatureFlagsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureFlags {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sftpEnabled': json['sftpEnabled'],
        'governanceEnabled': json['governanceEnabled'],
        'projectRequestsEnabled': json['projectRequestsEnabled'],
    };
}

export function FeatureFlagsToJSON(value?: FeatureFlags | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sftpEnabled': value.sftpEnabled,
        'governanceEnabled': value.governanceEnabled,
        'projectRequestsEnabled': value.projectRequestsEnabled,
    };
}

