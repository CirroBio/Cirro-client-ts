/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReferenceType
 */
export interface ReferenceType {
    /**
     * 
     * @type {string}
     * @memberof ReferenceType
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ReferenceType
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ReferenceType
     */
    directory: string;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof ReferenceType
     */
    validation: Array<{ [key: string]: any; }>;
}

/**
 * Check if a given object implements the ReferenceType interface.
 */
export function instanceOfReferenceType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "directory" in value;
    isInstance = isInstance && "validation" in value;

    return isInstance;
}

export function ReferenceTypeFromJSON(json: any): ReferenceType {
    return ReferenceTypeFromJSONTyped(json, false);
}

export function ReferenceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'directory': json['directory'],
        'validation': json['validation'],
    };
}

export function ReferenceTypeToJSON(value?: ReferenceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'directory': value.directory,
        'validation': value.validation,
    };
}

