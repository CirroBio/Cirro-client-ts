/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UploadDatasetCreateResponse
 */
export interface UploadDatasetCreateResponse {
    /**
     * 
     * @type {string}
     * @memberof UploadDatasetCreateResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UploadDatasetCreateResponse
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof UploadDatasetCreateResponse
     */
    uploadPath: string;
    /**
     * 
     * @type {string}
     * @memberof UploadDatasetCreateResponse
     */
    bucket: string;
}

/**
 * Check if a given object implements the UploadDatasetCreateResponse interface.
 */
export function instanceOfUploadDatasetCreateResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "uploadPath" in value;
    isInstance = isInstance && "bucket" in value;

    return isInstance;
}

export function UploadDatasetCreateResponseFromJSON(json: any): UploadDatasetCreateResponse {
    return UploadDatasetCreateResponseFromJSONTyped(json, false);
}

export function UploadDatasetCreateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadDatasetCreateResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'message': json['message'],
        'uploadPath': json['uploadPath'],
        'bucket': json['bucket'],
    };
}

export function UploadDatasetCreateResponseToJSON(value?: UploadDatasetCreateResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'message': value.message,
        'uploadPath': value.uploadPath,
        'bucket': value.bucket,
    };
}

