/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MoveDatasetResponse
 */
export interface MoveDatasetResponse {
    /**
     * 
     * @type {string}
     * @memberof MoveDatasetResponse
     */
    s3CopyCommand: string;
    /**
     * 
     * @type {string}
     * @memberof MoveDatasetResponse
     */
    s3DeleteCommand: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MoveDatasetResponse
     */
    samplesNotMoved: Array<string>;
}

/**
 * Check if a given object implements the MoveDatasetResponse interface.
 */
export function instanceOfMoveDatasetResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "s3CopyCommand" in value;
    isInstance = isInstance && "s3DeleteCommand" in value;
    isInstance = isInstance && "samplesNotMoved" in value;

    return isInstance;
}

export function MoveDatasetResponseFromJSON(json: any): MoveDatasetResponse {
    return MoveDatasetResponseFromJSONTyped(json, false);
}

export function MoveDatasetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoveDatasetResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        's3CopyCommand': json['s3CopyCommand'],
        's3DeleteCommand': json['s3DeleteCommand'],
        'samplesNotMoved': json['samplesNotMoved'],
    };
}

export function MoveDatasetResponseToJSON(value?: MoveDatasetResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        's3CopyCommand': value.s3CopyCommand,
        's3DeleteCommand': value.s3DeleteCommand,
        'samplesNotMoved': value.samplesNotMoved,
    };
}

