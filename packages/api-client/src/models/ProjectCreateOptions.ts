/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CloudAccountType } from './CloudAccountType';
import {
    CloudAccountTypeFromJSON,
    CloudAccountTypeFromJSONTyped,
    CloudAccountTypeToJSON,
} from './CloudAccountType';

/**
 * 
 * @export
 * @interface ProjectCreateOptions
 */
export interface ProjectCreateOptions {
    /**
     * 
     * @type {Array<CloudAccountType>}
     * @memberof ProjectCreateOptions
     */
    enabledAccountTypes: Array<CloudAccountType>;
    /**
     * 
     * @type {string}
     * @memberof ProjectCreateOptions
     */
    portalAccountId: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCreateOptions
     */
    portalRegion: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCreateOptions
     */
    templateUrl: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCreateOptions
     */
    wizardUrl: string;
}

/**
 * Check if a given object implements the ProjectCreateOptions interface.
 */
export function instanceOfProjectCreateOptions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabledAccountTypes" in value;
    isInstance = isInstance && "portalAccountId" in value;
    isInstance = isInstance && "portalRegion" in value;
    isInstance = isInstance && "templateUrl" in value;
    isInstance = isInstance && "wizardUrl" in value;

    return isInstance;
}

export function ProjectCreateOptionsFromJSON(json: any): ProjectCreateOptions {
    return ProjectCreateOptionsFromJSONTyped(json, false);
}

export function ProjectCreateOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectCreateOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabledAccountTypes': ((json['enabledAccountTypes'] as Array<any>).map(CloudAccountTypeFromJSON)),
        'portalAccountId': json['portalAccountId'],
        'portalRegion': json['portalRegion'],
        'templateUrl': json['templateUrl'],
        'wizardUrl': json['wizardUrl'],
    };
}

export function ProjectCreateOptionsToJSON(value?: ProjectCreateOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabledAccountTypes': ((value.enabledAccountTypes as Array<any>).map(CloudAccountTypeToJSON)),
        'portalAccountId': value.portalAccountId,
        'portalRegion': value.portalRegion,
        'templateUrl': value.templateUrl,
        'wizardUrl': value.wizardUrl,
    };
}

