/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface S3Credentials
 */
export interface S3Credentials {
    /**
     * 
     * @type {string}
     * @memberof S3Credentials
     */
    accessKeyId: string;
    /**
     * 
     * @type {string}
     * @memberof S3Credentials
     */
    secretAccessKey: string;
    /**
     * 
     * @type {string}
     * @memberof S3Credentials
     */
    sessionToken: string;
    /**
     * 
     * @type {Date}
     * @memberof S3Credentials
     */
    expiration: Date;
    /**
     * Region of S3 Bucket
     * @type {string}
     * @memberof S3Credentials
     */
    region?: string;
}

/**
 * Check if a given object implements the S3Credentials interface.
 */
export function instanceOfS3Credentials(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accessKeyId" in value;
    isInstance = isInstance && "secretAccessKey" in value;
    isInstance = isInstance && "sessionToken" in value;
    isInstance = isInstance && "expiration" in value;

    return isInstance;
}

export function S3CredentialsFromJSON(json: any): S3Credentials {
    return S3CredentialsFromJSONTyped(json, false);
}

export function S3CredentialsFromJSONTyped(json: any, ignoreDiscriminator: boolean): S3Credentials {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessKeyId': json['accessKeyId'],
        'secretAccessKey': json['secretAccessKey'],
        'sessionToken': json['sessionToken'],
        'expiration': (new Date(json['expiration'])),
        'region': !exists(json, 'region') ? undefined : json['region'],
    };
}

export function S3CredentialsToJSON(value?: S3Credentials | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessKeyId': value.accessKeyId,
        'secretAccessKey': value.secretAccessKey,
        'sessionToken': value.sessionToken,
        'expiration': (value.expiration.toISOString()),
        'region': value.region,
    };
}

