/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomPipelineSettingsDto1
 */
export interface CustomPipelineSettingsDto1 {
    /**
     * 
     * @type {string}
     * @memberof CustomPipelineSettingsDto1
     */
    repository: string;
    /**
     * 
     * @type {string}
     * @memberof CustomPipelineSettingsDto1
     */
    branch: string;
    /**
     * 
     * @type {string}
     * @memberof CustomPipelineSettingsDto1
     */
    folder: string;
    /**
     * 
     * @type {Date}
     * @memberof CustomPipelineSettingsDto1
     */
    lastSync: Date;
    /**
     * 
     * @type {string}
     * @memberof CustomPipelineSettingsDto1
     */
    syncStatus: string;
    /**
     * 
     * @type {string}
     * @memberof CustomPipelineSettingsDto1
     */
    commitHash: string;
}

/**
 * Check if a given object implements the CustomPipelineSettingsDto1 interface.
 */
export function instanceOfCustomPipelineSettingsDto1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "repository" in value;
    isInstance = isInstance && "branch" in value;
    isInstance = isInstance && "folder" in value;
    isInstance = isInstance && "lastSync" in value;
    isInstance = isInstance && "syncStatus" in value;
    isInstance = isInstance && "commitHash" in value;

    return isInstance;
}

export function CustomPipelineSettingsDto1FromJSON(json: any): CustomPipelineSettingsDto1 {
    return CustomPipelineSettingsDto1FromJSONTyped(json, false);
}

export function CustomPipelineSettingsDto1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomPipelineSettingsDto1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'repository': json['repository'],
        'branch': json['branch'],
        'folder': json['folder'],
        'lastSync': (new Date(json['lastSync'])),
        'syncStatus': json['syncStatus'],
        'commitHash': json['commitHash'],
    };
}

export function CustomPipelineSettingsDto1ToJSON(value?: CustomPipelineSettingsDto1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'repository': value.repository,
        'branch': value.branch,
        'folder': value.folder,
        'lastSync': (value.lastSync.toISOString()),
        'syncStatus': value.syncStatus,
        'commitHash': value.commitHash,
    };
}

