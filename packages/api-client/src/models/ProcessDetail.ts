/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomPipelineSettings } from './CustomPipelineSettings';
import {
    CustomPipelineSettingsFromJSON,
    CustomPipelineSettingsFromJSONTyped,
    CustomPipelineSettingsToJSON,
} from './CustomPipelineSettings';
import type { Executor } from './Executor';
import {
    ExecutorFromJSON,
    ExecutorFromJSONTyped,
    ExecutorToJSON,
} from './Executor';
import type { ProcessDetailAllOfPipelineCode } from './ProcessDetailAllOfPipelineCode';
import {
    ProcessDetailAllOfPipelineCodeFromJSON,
    ProcessDetailAllOfPipelineCodeFromJSONTyped,
    ProcessDetailAllOfPipelineCodeToJSON,
} from './ProcessDetailAllOfPipelineCode';

/**
 * 
 * @export
 * @interface ProcessDetail
 */
export interface ProcessDetail {
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    description: string;
    /**
     * 
     * @type {Executor}
     * @memberof ProcessDetail
     */
    executor: Executor;
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    documentationUrl: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    fileRequirementsMessage: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProcessDetail
     */
    childProcessIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProcessDetail
     */
    parentProcessIds: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ProcessDetail
     */
    owner: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProcessDetail
     */
    linkedProjectIds: Array<string>;
    /**
     * 
     * @type {ProcessDetailAllOfPipelineCode}
     * @memberof ProcessDetail
     */
    pipelineCode: ProcessDetailAllOfPipelineCode;
    /**
     * 
     * @type {CustomPipelineSettings}
     * @memberof ProcessDetail
     */
    customSettings: CustomPipelineSettings;
    /**
     * 
     * @type {boolean}
     * @memberof ProcessDetail
     */
    isArchived: boolean;
}

/**
 * Check if a given object implements the ProcessDetail interface.
 */
export function instanceOfProcessDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "executor" in value;
    isInstance = isInstance && "documentationUrl" in value;
    isInstance = isInstance && "fileRequirementsMessage" in value;
    isInstance = isInstance && "childProcessIds" in value;
    isInstance = isInstance && "parentProcessIds" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "linkedProjectIds" in value;
    isInstance = isInstance && "pipelineCode" in value;
    isInstance = isInstance && "customSettings" in value;
    isInstance = isInstance && "isArchived" in value;

    return isInstance;
}

export function ProcessDetailFromJSON(json: any): ProcessDetail {
    return ProcessDetailFromJSONTyped(json, false);
}

export function ProcessDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'executor': ExecutorFromJSON(json['executor']),
        'documentationUrl': json['documentationUrl'],
        'fileRequirementsMessage': json['fileRequirementsMessage'],
        'childProcessIds': json['childProcessIds'],
        'parentProcessIds': json['parentProcessIds'],
        'owner': json['owner'],
        'linkedProjectIds': json['linkedProjectIds'],
        'pipelineCode': ProcessDetailAllOfPipelineCodeFromJSON(json['pipelineCode']),
        'customSettings': CustomPipelineSettingsFromJSON(json['customSettings']),
        'isArchived': json['isArchived'],
    };
}

export function ProcessDetailToJSON(value?: ProcessDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'executor': ExecutorToJSON(value.executor),
        'documentationUrl': value.documentationUrl,
        'fileRequirementsMessage': value.fileRequirementsMessage,
        'childProcessIds': value.childProcessIds,
        'parentProcessIds': value.parentProcessIds,
        'owner': value.owner,
        'linkedProjectIds': value.linkedProjectIds,
        'pipelineCode': ProcessDetailAllOfPipelineCodeToJSON(value.pipelineCode),
        'customSettings': CustomPipelineSettingsToJSON(value.customSettings),
        'isArchived': value.isArchived,
    };
}

