/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BillingMethod } from './BillingMethod';
import {
    BillingMethodFromJSON,
    BillingMethodFromJSONTyped,
    BillingMethodToJSON,
} from './BillingMethod';
import type { Contact } from './Contact';
import {
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
} from './Contact';
import type { CustomerType } from './CustomerType';
import {
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
} from './CustomerType';

/**
 * 
 * @export
 * @interface BillingAccountRequest
 */
export interface BillingAccountRequest {
    /**
     * 
     * @type {string}
     * @memberof BillingAccountRequest
     */
    name: string;
    /**
     * 
     * @type {Array<Contact>}
     * @memberof BillingAccountRequest
     */
    contacts: Array<Contact>;
    /**
     * 
     * @type {CustomerType}
     * @memberof BillingAccountRequest
     */
    customerType: CustomerType;
    /**
     * 
     * @type {BillingMethod}
     * @memberof BillingAccountRequest
     */
    billingMethod: BillingMethod;
    /**
     * 
     * @type {string}
     * @memberof BillingAccountRequest
     */
    primaryBudgetNumber: string;
    /**
     * 
     * @type {string}
     * @memberof BillingAccountRequest
     */
    owner: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BillingAccountRequest
     */
    sharedWith: Array<string>;
}

/**
 * Check if a given object implements the BillingAccountRequest interface.
 */
export function instanceOfBillingAccountRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "contacts" in value;
    isInstance = isInstance && "customerType" in value;
    isInstance = isInstance && "billingMethod" in value;
    isInstance = isInstance && "primaryBudgetNumber" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "sharedWith" in value;

    return isInstance;
}

export function BillingAccountRequestFromJSON(json: any): BillingAccountRequest {
    return BillingAccountRequestFromJSONTyped(json, false);
}

export function BillingAccountRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingAccountRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'contacts': ((json['contacts'] as Array<any>).map(ContactFromJSON)),
        'customerType': CustomerTypeFromJSON(json['customerType']),
        'billingMethod': BillingMethodFromJSON(json['billingMethod']),
        'primaryBudgetNumber': json['primaryBudgetNumber'],
        'owner': json['owner'],
        'sharedWith': json['sharedWith'],
    };
}

export function BillingAccountRequestToJSON(value?: BillingAccountRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'contacts': ((value.contacts as Array<any>).map(ContactToJSON)),
        'customerType': CustomerTypeToJSON(value.customerType),
        'billingMethod': BillingMethodToJSON(value.billingMethod),
        'primaryBudgetNumber': value.primaryBudgetNumber,
        'owner': value.owner,
        'sharedWith': value.sharedWith,
    };
}

