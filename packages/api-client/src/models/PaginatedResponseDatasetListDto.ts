/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Dataset } from './Dataset';
import {
    DatasetFromJSON,
    DatasetFromJSONTyped,
    DatasetToJSON,
} from './Dataset';

/**
 * 
 * @export
 * @interface PaginatedResponseDatasetListDto
 */
export interface PaginatedResponseDatasetListDto {
    /**
     * 
     * @type {Array<Dataset>}
     * @memberof PaginatedResponseDatasetListDto
     */
    data: Array<Dataset>;
    /**
     * 
     * @type {string}
     * @memberof PaginatedResponseDatasetListDto
     */
    nextToken: string;
}

/**
 * Check if a given object implements the PaginatedResponseDatasetListDto interface.
 */
export function instanceOfPaginatedResponseDatasetListDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "nextToken" in value;

    return isInstance;
}

export function PaginatedResponseDatasetListDtoFromJSON(json: any): PaginatedResponseDatasetListDto {
    return PaginatedResponseDatasetListDtoFromJSONTyped(json, false);
}

export function PaginatedResponseDatasetListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseDatasetListDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(DatasetFromJSON)),
        'nextToken': json['nextToken'],
    };
}

export function PaginatedResponseDatasetListDtoToJSON(value?: PaginatedResponseDatasetListDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(DatasetToJSON)),
        'nextToken': value.nextToken,
    };
}

