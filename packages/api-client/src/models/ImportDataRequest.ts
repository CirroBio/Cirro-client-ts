/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';

/**
 * 
 * @export
 * @interface ImportDataRequest
 */
export interface ImportDataRequest {
    /**
     * Name of the dataset
     * @type {string}
     * @memberof ImportDataRequest
     */
    name: string;
    /**
     * Description of the dataset
     * @type {string}
     * @memberof ImportDataRequest
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ImportDataRequest
     */
    publicIds: Array<string>;
    /**
     * List of tags to apply to the dataset
     * @type {Array<Tag>}
     * @memberof ImportDataRequest
     */
    tags?: Array<Tag> | null;
}

/**
 * Check if a given object implements the ImportDataRequest interface.
 */
export function instanceOfImportDataRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "publicIds" in value;

    return isInstance;
}

export function ImportDataRequestFromJSON(json: any): ImportDataRequest {
    return ImportDataRequestFromJSONTyped(json, false);
}

export function ImportDataRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDataRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'publicIds': json['publicIds'],
        'tags': !exists(json, 'tags') ? undefined : (json['tags'] === null ? null : (json['tags'] as Array<any>).map(TagFromJSON)),
    };
}

export function ImportDataRequestToJSON(value?: ImportDataRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'publicIds': value.publicIds,
        'tags': value.tags === undefined ? undefined : (value.tags === null ? null : (value.tags as Array<any>).map(TagToJSON)),
    };
}

