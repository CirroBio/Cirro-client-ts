/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CloudAccount } from './CloudAccount';
import {
    CloudAccountFromJSON,
    CloudAccountFromJSONTyped,
    CloudAccountToJSON,
} from './CloudAccount';
import type { Contact } from './Contact';
import {
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
} from './Contact';
import type { ProjectSettings } from './ProjectSettings';
import {
    ProjectSettingsFromJSON,
    ProjectSettingsFromJSONTyped,
    ProjectSettingsToJSON,
} from './ProjectSettings';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';

/**
 * 
 * @export
 * @interface ProjectInput
 */
export interface ProjectInput {
    /**
     * 
     * @type {string}
     * @memberof ProjectInput
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectInput
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectInput
     */
    billingAccountId: string;
    /**
     * 
     * @type {ProjectSettings}
     * @memberof ProjectInput
     */
    settings: ProjectSettings;
    /**
     * 
     * @type {Array<Contact>}
     * @memberof ProjectInput
     */
    contacts: Array<Contact>;
    /**
     * 
     * @type {CloudAccount}
     * @memberof ProjectInput
     */
    account?: CloudAccount | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProjectInput
     */
    classificationIds?: Array<string> | null;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof ProjectInput
     */
    tags?: Array<Tag> | null;
}

/**
 * Check if a given object implements the ProjectInput interface.
 */
export function instanceOfProjectInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "billingAccountId" in value;
    isInstance = isInstance && "settings" in value;
    isInstance = isInstance && "contacts" in value;

    return isInstance;
}

export function ProjectInputFromJSON(json: any): ProjectInput {
    return ProjectInputFromJSONTyped(json, false);
}

export function ProjectInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'billingAccountId': json['billingAccountId'],
        'settings': ProjectSettingsFromJSON(json['settings']),
        'contacts': ((json['contacts'] as Array<any>).map(ContactFromJSON)),
        'account': !exists(json, 'account') ? undefined : CloudAccountFromJSON(json['account']),
        'classificationIds': !exists(json, 'classificationIds') ? undefined : json['classificationIds'],
        'tags': !exists(json, 'tags') ? undefined : (json['tags'] === null ? null : (json['tags'] as Array<any>).map(TagFromJSON)),
    };
}

export function ProjectInputToJSON(value?: ProjectInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'billingAccountId': value.billingAccountId,
        'settings': ProjectSettingsToJSON(value.settings),
        'contacts': ((value.contacts as Array<any>).map(ContactToJSON)),
        'account': CloudAccountToJSON(value.account),
        'classificationIds': value.classificationIds,
        'tags': value.tags === undefined ? undefined : (value.tags === null ? null : (value.tags as Array<any>).map(TagToJSON)),
    };
}

