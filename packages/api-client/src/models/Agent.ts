/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
} from './AgentStatus';

/**
 * Details of the agent
 * @export
 * @interface Agent
 */
export interface Agent {
    /**
     * The unique ID of the agent
     * @type {string}
     * @memberof Agent
     */
    id?: string;
    /**
     * The display name of the agent
     * @type {string}
     * @memberof Agent
     */
    name?: string;
    /**
     * Tags associated with the agent
     * @type {{ [key: string]: string; }}
     * @memberof Agent
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {AgentStatus}
     * @memberof Agent
     */
    status: AgentStatus;
}

/**
 * Check if a given object implements the Agent interface.
 */
export function instanceOfAgent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function AgentFromJSON(json: any): Agent {
    return AgentFromJSONTyped(json, false);
}

export function AgentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Agent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'status': AgentStatusFromJSON(json['status']),
    };
}

export function AgentToJSON(value?: Agent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'tags': value.tags,
        'status': AgentStatusToJSON(value.status),
    };
}

