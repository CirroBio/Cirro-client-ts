/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DatasetConditionField } from './DatasetConditionField';
import {
    DatasetConditionFieldFromJSON,
    DatasetConditionFieldFromJSONTyped,
    DatasetConditionFieldToJSON,
} from './DatasetConditionField';

/**
 * 
 * @export
 * @interface DatasetCondition
 */
export interface DatasetCondition {
    /**
     * 
     * @type {DatasetConditionField}
     * @memberof DatasetCondition
     */
    field: DatasetConditionField;
    /**
     * 
     * @type {string}
     * @memberof DatasetCondition
     */
    value: string;
}

/**
 * Check if a given object implements the DatasetCondition interface.
 */
export function instanceOfDatasetCondition(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "field" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function DatasetConditionFromJSON(json: any): DatasetCondition {
    return DatasetConditionFromJSONTyped(json, false);
}

export function DatasetConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetCondition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': DatasetConditionFieldFromJSON(json['field']),
        'value': json['value'],
    };
}

export function DatasetConditionToJSON(value?: DatasetCondition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': DatasetConditionFieldToJSON(value.field),
        'value': value.value,
    };
}

