/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    nativeJobId: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    status: string;
    /**
     * 
     * @type {Date}
     * @memberof Task
     */
    requestedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Task
     */
    stoppedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    containerImage?: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    commandLine?: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    logLocation?: string;
}

/**
 * Check if a given object implements the Task interface.
 */
export function instanceOfTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "nativeJobId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "requestedAt" in value;

    return isInstance;
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'nativeJobId': json['nativeJobId'],
        'status': json['status'],
        'requestedAt': (new Date(json['requestedAt'])),
        'stoppedAt': !exists(json, 'stoppedAt') ? undefined : (new Date(json['stoppedAt'])),
        'containerImage': !exists(json, 'containerImage') ? undefined : json['containerImage'],
        'commandLine': !exists(json, 'commandLine') ? undefined : json['commandLine'],
        'logLocation': !exists(json, 'logLocation') ? undefined : json['logLocation'],
    };
}

export function TaskToJSON(value?: Task | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'nativeJobId': value.nativeJobId,
        'status': value.status,
        'requestedAt': (value.requestedAt.toISOString()),
        'stoppedAt': value.stoppedAt === undefined ? undefined : (value.stoppedAt.toISOString()),
        'containerImage': value.containerImage,
        'commandLine': value.commandLine,
        'logLocation': value.logLocation,
    };
}

