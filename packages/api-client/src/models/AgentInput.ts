/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AgentInput
 */
export interface AgentInput {
    /**
     * The unique ID of the agent (required on create)
     * @type {string}
     * @memberof AgentInput
     */
    id?: string | null;
    /**
     * The display name of the agent
     * @type {string}
     * @memberof AgentInput
     */
    name: string;
    /**
     * Arn of the AWS IAM role or user that the agent will use (JSONSchema format)
     * @type {string}
     * @memberof AgentInput
     */
    agentRoleArn: string;
    /**
     * The configuration options available for the agent
     * @type {{ [key: string]: any; }}
     * @memberof AgentInput
     */
    configurationOptionsSchema?: { [key: string]: any; } | null;
    /**
     * The environment configuration for the agent
     * @type {{ [key: string]: string; }}
     * @memberof AgentInput
     */
    environmentConfiguration?: { [key: string]: string; } | null;
    /**
     * The tags associated with the agent displayed to the user
     * @type {{ [key: string]: string; }}
     * @memberof AgentInput
     */
    tags?: { [key: string]: string; } | null;
}

/**
 * Check if a given object implements the AgentInput interface.
 */
export function instanceOfAgentInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "agentRoleArn" in value;

    return isInstance;
}

export function AgentInputFromJSON(json: any): AgentInput {
    return AgentInputFromJSONTyped(json, false);
}

export function AgentInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'agentRoleArn': json['agentRoleArn'],
        'configurationOptionsSchema': !exists(json, 'configurationOptionsSchema') ? undefined : json['configurationOptionsSchema'],
        'environmentConfiguration': !exists(json, 'environmentConfiguration') ? undefined : json['environmentConfiguration'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function AgentInputToJSON(value?: AgentInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'agentRoleArn': value.agentRoleArn,
        'configurationOptionsSchema': value.configurationOptionsSchema,
        'environmentConfiguration': value.environmentConfiguration,
        'tags': value.tags,
    };
}

