/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserProjectAssignment } from './UserProjectAssignment';
import {
    UserProjectAssignmentFromJSON,
    UserProjectAssignmentFromJSONTyped,
    UserProjectAssignmentToJSON,
} from './UserProjectAssignment';
import type { UserSettings } from './UserSettings';
import {
    UserSettingsFromJSON,
    UserSettingsFromJSONTyped,
    UserSettingsToJSON,
} from './UserSettings';

/**
 * 
 * @export
 * @interface UserDetail
 */
export interface UserDetail {
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    organization: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    jobTitle: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    department: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    invitedBy: string;
    /**
     * 
     * @type {Date}
     * @memberof UserDetail
     */
    signUpTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof UserDetail
     */
    lastSignedIn?: Date | null;
    /**
     * 
     * @type {Array<UserProjectAssignment>}
     * @memberof UserDetail
     */
    projectAssignments: Array<UserProjectAssignment>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserDetail
     */
    groups: Array<string>;
    /**
     * 
     * @type {UserSettings}
     * @memberof UserDetail
     */
    settings: UserSettings;
}

/**
 * Check if a given object implements the UserDetail interface.
 */
export function instanceOfUserDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "phone" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "organization" in value;
    isInstance = isInstance && "jobTitle" in value;
    isInstance = isInstance && "department" in value;
    isInstance = isInstance && "invitedBy" in value;
    isInstance = isInstance && "projectAssignments" in value;
    isInstance = isInstance && "groups" in value;
    isInstance = isInstance && "settings" in value;

    return isInstance;
}

export function UserDetailFromJSON(json: any): UserDetail {
    return UserDetailFromJSONTyped(json, false);
}

export function UserDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['username'],
        'name': json['name'],
        'phone': json['phone'],
        'email': json['email'],
        'organization': json['organization'],
        'jobTitle': json['jobTitle'],
        'department': json['department'],
        'invitedBy': json['invitedBy'],
        'signUpTime': !exists(json, 'signUpTime') ? undefined : (json['signUpTime'] === null ? null : new Date(json['signUpTime'])),
        'lastSignedIn': !exists(json, 'lastSignedIn') ? undefined : (json['lastSignedIn'] === null ? null : new Date(json['lastSignedIn'])),
        'projectAssignments': ((json['projectAssignments'] as Array<any>).map(UserProjectAssignmentFromJSON)),
        'groups': json['groups'],
        'settings': UserSettingsFromJSON(json['settings']),
    };
}

export function UserDetailToJSON(value?: UserDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'name': value.name,
        'phone': value.phone,
        'email': value.email,
        'organization': value.organization,
        'jobTitle': value.jobTitle,
        'department': value.department,
        'invitedBy': value.invitedBy,
        'signUpTime': value.signUpTime === undefined ? undefined : (value.signUpTime === null ? null : value.signUpTime.toISOString()),
        'lastSignedIn': value.lastSignedIn === undefined ? undefined : (value.lastSignedIn === null ? null : value.lastSignedIn.toISOString()),
        'projectAssignments': ((value.projectAssignments as Array<any>).map(UserProjectAssignmentToJSON)),
        'groups': value.groups,
        'settings': UserSettingsToJSON(value.settings),
    };
}

