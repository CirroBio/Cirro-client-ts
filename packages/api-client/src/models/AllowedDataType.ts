/* tslint:disable */
/* eslint-disable */
/**
 * Cirro Data
 * Cirro Data Platform service API
 *
 * The version of the OpenAPI document: latest
 * Contact: support@cirro.bio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileNamePattern } from './FileNamePattern';
import {
    FileNamePatternFromJSON,
    FileNamePatternFromJSONTyped,
    FileNamePatternToJSON,
} from './FileNamePattern';

/**
 * 
 * @export
 * @interface AllowedDataType
 */
export interface AllowedDataType {
    /**
     * 
     * @type {string}
     * @memberof AllowedDataType
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof AllowedDataType
     */
    errorMsg: string;
    /**
     * 
     * @type {Array<FileNamePattern>}
     * @memberof AllowedDataType
     */
    allowedPatterns: Array<FileNamePattern>;
}

/**
 * Check if a given object implements the AllowedDataType interface.
 */
export function instanceOfAllowedDataType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "errorMsg" in value;
    isInstance = isInstance && "allowedPatterns" in value;

    return isInstance;
}

export function AllowedDataTypeFromJSON(json: any): AllowedDataType {
    return AllowedDataTypeFromJSONTyped(json, false);
}

export function AllowedDataTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllowedDataType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'errorMsg': json['errorMsg'],
        'allowedPatterns': ((json['allowedPatterns'] as Array<any>).map(FileNamePatternFromJSON)),
    };
}

export function AllowedDataTypeToJSON(value?: AllowedDataType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'errorMsg': value.errorMsg,
        'allowedPatterns': ((value.allowedPatterns as Array<any>).map(FileNamePatternToJSON)),
    };
}

